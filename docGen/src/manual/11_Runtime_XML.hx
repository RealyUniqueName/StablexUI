/**
@manual Run time XML processing

Sometimes we need to update ui in published app without updating whole app. To make this
possible there must be a way to process xml at run time, rather than compile time, so we
can download new xml from internet and use it.

StablexUI has such opportunity.
To enable run time xml processing initialize StablexUI with the second optional parameter:

<haxe>
    ru.stablex.ui.UIBuilder.init(null, true);
    //or
    ru.stablex.ui.UIBuilder.init("defaults.xml", true);
</haxe>

You also need to include <a href="http://lib.haxe.org/p/hscript" target="_blank">hscript</a> library in your nmml-file.
If you're still using Haxe 2.10, you have to replace line 159 in <i>haxelib_path</i>/hscript/2,0/hscript/Parser.hx
with this:

<pre>
    tokens = new haxe.FastList<Token>();
</pre>

Now you can use <type>ru.stablex.ui.RTXml</type>.buildFn() just like <type>ru.stablex.ui.UIBuilder</type>.buildFn()
(<a href="https://github.com/RealyUniqueName/StablexUI/tree/xml-runtime/samples/runTimeXml" target="_blank">see example code on github</a>)

You can use all <a href="#manual/04_Advanced_XML.html">advanced xml features</a> except meta tags.
Hscript limitations can be found <a href="https://code.google.com/p/hscript/#Example" target="_blank">here</a> at bottom of page.

Keep in mind, <type>ru.stablex.ui.RTXml</type> uses reflection and <type>Dynamic</type> a lot.
So it's completely type-unsafe comparing to standart (and recommended) compile time xml processing.
Always store and reuse functions generated by <type>ru.stablex.ui.RTXml</type>.buildFn() if you need to recreate
the same interface several times. Such practice reduces ui creation time by ~50% (depends on platform)
*/